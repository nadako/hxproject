// Generated by Haxe 3.4.0 (git build development @ ceab7d1)
if (typeof process !== "undefined") if (process.version < "v4.0.0") console.warn("Module " + (typeof(module) == "undefined" ? "" : module.filename) + " requires node.js version 4.0.0 or higher");

(function () { "use strict";
var Main = function() { };
Main.main = function() {
	var args = process.argv.slice(2);
	var args1 = Main.generateArgs(JSON.parse(js_node_Fs.readFileSync(args.length == 0 ? "hxproject.json" : args[1],{ encoding : "utf8"})));
	console.log("Executing haxe " + args1.join(" "));
	if(args1 == null) {
		js_node_ChildProcess.spawnSync("haxe",{ stdio : "inherit"});
	} else {
		js_node_ChildProcess.spawnSync("haxe",args1,{ stdio : "inherit"});
	}
};
Main.generateArgs = function(p) {
	var args = [];
	var this1 = p.classPaths;
	if(this1 != null) {
		var _g = 0;
		while(_g < this1.length) {
			var path = this1[_g];
			++_g;
			args.push("-cp");
			args.push(path);
		}
	}
	var this2 = p.libraries;
	if(this2 != null) {
		var _g1 = 0;
		while(_g1 < this2.length) {
			var library = this2[_g1];
			++_g1;
			args.push("-lib");
			args.push(library);
		}
	}
	var this3 = p.defines;
	if(this3 != null) {
		var _g2 = 0;
		while(_g2 < this3.length) {
			var define = this3[_g2];
			++_g2;
			args.push("-D");
			args.push(define);
		}
	}
	var this4 = p.debug;
	if(this4 != null) {
		if(this4) {
			args.push("-debug");
		}
	}
	var this5 = p.entryPoints;
	if(this5 != null) {
		var _g3 = 0;
		while(_g3 < this5.length) {
			var cls = this5[_g3];
			++_g3;
			args.push(cls);
		}
	}
	var this6 = p.mainClass;
	if(this6 != null) {
		args.push("-main");
		args.push(this6);
	}
	var this7 = p.output;
	if(this7 != null) {
		args.push("-" + this7.target);
		args.push(this7.path);
	}
	var this8 = p.deadCodeElimination;
	if(this8 != null) {
		args.push("-dce");
		args.push(this8);
	}
	return args;
};
var haxe_io_Bytes = function() { };
var haxe_io_Eof = function() { };
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
};
var js_node_ChildProcess = require("child_process");
var js_node_Fs = require("fs");
var js_node_buffer_Buffer = require("buffer").Buffer;
Main.main();
})();
